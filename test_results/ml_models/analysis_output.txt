================================================================================
OUTPUT DO TESTE: ML_MODELS
================================================================================
Data da execução: 2025-06-20 18:05:12
================================================================================

RESUMO: ML_MODELS
==================================================
Duração: 0:00:31
Timestamp: 2025-06-20T18:05:12.574012

RESULTADOS:
------------------------------

DATA_INFO:
  shape: (210, 9)
  features: 7
  varieties: ['Kama', 'Rosa', 'Canadian']

BASE_MODELS:
  KNN: {'accuracy': 0.873015873015873, 'correct_predictions': 55, 'total_predictions': 63}
  SVM: {'accuracy': 0.873015873015873, 'correct_predictions': 55, 'total_predictions': 63}
  RandomForest: {'accuracy': 0.9206349206349206, 'correct_predictions': 58, 'total_predictions': 63}
  LogisticRegression: {'accuracy': 0.8571428571428571, 'correct_predictions': 54, 'total_predictions': 63}
  NaiveBayes: {'accuracy': 0.8253968253968254, 'correct_predictions': 52, 'total_predictions': 63}

OPTIMIZATION:
  KNN: {'best_params': {'metric': 'manhattan', 'n_neighbors': 3, 'weights': 'uniform'}, 'best_score': np.float64(0.945977011494253), 'total_combinations': 36}
  SVM: {'best_params': {'C': 100, 'gamma': 'scale', 'kernel': 'linear'}, 'best_score': np.float64(0.973103448275862), 'total_combinations': 72}
  RandomForest: {'best_params': {'max_depth': None, 'min_samples_leaf': 1, 'min_samples_split': 5, 'n_estimators': 10}, 'best_score': np.float64(0.9124137931034483), 'total_combinations': 144}
  LogisticRegression: {'best_params': {'C': 100, 'penalty': 'l2', 'solver': 'lbfgs'}, 'best_score': np.float64(0.9728735632183909), 'total_combinations': 5}
  NaiveBayes: {'best_params': {'var_smoothing': 1e-10}, 'best_score': np.float64(0.9057471264367816), 'total_combinations': 4}

FINAL_EVALUATION:
  KNN: {'accuracy': 0.8888888888888888, 'precision': 0.8879509379509379, 'recall': 0.8888888888888888, 'f1_score': 0.8880875851947888, 'cv_mean': np.float64(0.945977011494253), 'cv_std': np.float64(0.034050936020754985)}
  SVM: {'accuracy': 0.8888888888888888, 'precision': 0.8907894736842105, 'recall': 0.8888888888888888, 'f1_score': 0.8875338753387534, 'cv_mean': np.float64(0.973103448275862), 'cv_std': np.float64(0.02500997290843061)}
  RandomForest: {'accuracy': 0.9047619047619048, 'precision': 0.906926406926407, 'recall': 0.9047619047619048, 'f1_score': 0.9054911811576587, 'cv_mean': np.float64(0.9124137931034483), 'cv_std': np.float64(0.05781232135050398)}
  LogisticRegression: {'accuracy': 0.8888888888888888, 'precision': 0.8907894736842105, 'recall': 0.8888888888888888, 'f1_score': 0.8875338753387534, 'cv_mean': np.float64(0.9728735632183909), 'cv_std': np.float64(0.025073284054135125)}
  NaiveBayes: {'accuracy': 0.8253968253968254, 'precision': 0.8339275103980986, 'recall': 0.8253968253968254, 'f1_score': 0.8250600661861371, 'cv_mean': np.float64(0.9057471264367816), 'cv_std': np.float64(0.07106386328378873)}

FEATURE_IMPORTANCE:
  perimeter: 0.3267193798924808
  area: 0.197248362931808
  kernel_groove_length: 0.14890963280931463
  kernel_width: 0.14510444018373678
  kernel_length: 0.08007783258298432
  asymmetry_coefficient: 0.05253492032083213
  compactness: 0.04940543127884355

BEST_MODEL:
  name: RandomForest
  accuracy: 0.9047619047619048